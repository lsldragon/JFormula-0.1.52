/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SubWindows;

import static UI.FormulaDisplayPanel.ta_formula;
import static UI.SettingsPanel.fg;
import Util.ConstantsUI;
import java.awt.Graphics;
import java.awt.Insets;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;

/**
 *
 * @author Elliot-VS
 */
public class RenderFormula extends javax.swing.JPanel implements Runnable {

    private static final String warnningMessage = "<html><font color=red size=6>Please restart the formula rendering window</html>";
    
    /**
     * Creates new form RenderFormula
     */
    Thread thread;
    TeXFormula formula = null;
    TeXIcon icon = null;
    JLabel jLabel = null;

    private boolean isRun = false;

    public RenderFormula() {
        initComponents();
        if (thread == null) {
            start();
        } else {
            stop();
        }
    }

    // start the thread
    private void start() {

        isRun = true;
        thread = new Thread(this, "RenderFormula");
        thread.start();
    }

    // stop the thread
    public synchronized void stop() {

        isRun = false;
        thread = null;

    }

    @Override
    public void paint(Graphics g) {

        g.clearRect(0, 0, this.getRootPane().getWidth(), this.getRootPane().getHeight());

        try {

            jLabel = new JLabel();
            jLabel.setForeground(fg);
            icon.paintIcon(jLabel, g, 0, 0);

            formula = null;
            icon = null;
            jLabel = null;

        } catch (Exception e) {

            if (e.getMessage() == null) {

                return;

            } else {

                JOptionPane.showMessageDialog(this, "ERROR: " + ConstantsUI.LINE_SEPARATOR + e.getMessage());

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 959, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 108, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void run() {

        while (true && isRun) {
            try {

                if (!(ta_formula.getText().equals("")) || !(ta_formula.getText().equals(ta_formula.getText()))) {

                    formula = new TeXFormula(ta_formula.getText().trim());      // try catch 
                    icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 40);
                    icon.setInsets(new Insets(5, 5, 5, 5));
                }
                repaint();

                Thread.sleep(100);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "ERROR:" + ConstantsUI.LINE_SEPARATOR + ex.getMessage() + ConstantsUI.LINE_SEPARATOR + warnningMessage, "FATAL ERROR", JOptionPane.WARNING_MESSAGE);
                return;

            }

        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
